{"version":3,"sources":["Api.js"],"names":["async","url","method","requestBody","requestOptions","clientId","await","Session","clientIdAsync","user","UserManager","getCurrentUserAsync","idToken","accessToken","let","headers","options","data","response","formData","isNode","convertedFormData","_convertFormDataToBuffer","getHeaders","axios","request","Error","responseBody","responseObj","_","isString","JSON","parse","e","ErrorCode","INVALID_JSON","err","ApiError","code","serverError","_callMethodAsync","Promise","resolve","pipe","concat","encoding","reader","FileReader","addEventListener","buffer","Buffer","result","readAsArrayBuffer","_createAndReadBuffer","path","promptShown","warningTimer","setTimeout","retryFunction","TIMER_DURATION","config","lastAmountLoaded","responseType","onDownloadProgress","progressEvent","roundedProgress","Math","floor","loaded","total","clearTimeout","progressFunction","fs","promise","writeFile","console","log","message","totalDownloadSize","parseInt","downloadProgress","on","chunk","length","createWriteStream","_downloadAsync","TIMEOUT","_isApiError","ROOT_BASE_URL","Config","api","scheme","host","port","API_BASE_URL","ApiClient","static","callMethodAsync","methodName","args","encodeURIComponent","stringify","callPathAsync","versionsAsync","_versionCache","getAsync","xdlSchemaAsync","sdkVersion","_schemaCaches","hasOwnProperty","join","__dirname","sdkVersionsAsync","versions","sdkVersions","downloadAsync","outputPath","extract","dotExpoHomeDirectory","UserSettings","tmpPath","Extract","extractAsync","rimraf","sync"],"mappings":"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","file":"../Api.js","sourcesContent":["/**\n * @flow\n */\n\nimport 'instapromise';\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport rimraf from 'rimraf';\nimport path from 'path';\nimport axios from 'axios';\nimport concat from 'concat-stream';\n\nimport { Cacher } from './tools/FsCache';\nimport Config from './Config';\nimport { isNode } from './tools/EnvironmentHelper';\nimport ErrorCode from './ErrorCode';\nimport * as Extract from './Extract';\nimport * as Session from './Session';\nimport UserManager from './User';\nimport UserSettings from './UserSettings';\nimport XDLError from './XDLError';\nimport FormData from './tools/FormData';\n\nconst TIMER_DURATION = 10000;\nconst TIMEOUT = 60000;\n\nfunction ApiError(code, message) {\n  let err = new Error(message);\n  // $FlowFixMe error has no property code\n  err.code = code;\n  // $FlowFixMe error has no property _isApiError\n  err._isApiError = true;\n  return err;\n}\n\nlet ROOT_BASE_URL = `${Config.api.scheme}://${Config.api.host}`;\nif (Config.api.port) {\n  ROOT_BASE_URL += ':' + Config.api.port;\n}\nlet API_BASE_URL = ROOT_BASE_URL + '/--/api/';\n\nasync function _callMethodAsync(\n  url,\n  method,\n  requestBody,\n  requestOptions\n): Promise<any> {\n  const clientId = await Session.clientIdAsync();\n  const user = (await UserManager.getCurrentUserAsync()) || {};\n\n  const { idToken, accessToken } = user;\n\n  let headers: any = {\n    'Exp-ClientId': clientId,\n  };\n\n  if (idToken) {\n    headers['Authorization'] = `Bearer ${idToken}`;\n  }\n\n  if (accessToken) {\n    headers['Exp-Access-Token'] = accessToken;\n  }\n\n  let options = {\n    url,\n    method: method || 'get',\n    headers,\n  };\n\n  if (requestBody) {\n    options = {\n      ...options,\n      data: requestBody,\n    };\n  }\n\n  let response;\n  if (requestOptions) {\n    if (requestOptions.formData) {\n      let data = requestOptions.formData;\n      if (isNode()) {\n        let convertedFormData = await _convertFormDataToBuffer(\n          requestOptions.formData\n        );\n        data = convertedFormData.data;\n        options.headers = {\n          ...options.headers,\n          ...requestOptions.formData.getHeaders(),\n        };\n      }\n      options = { ...options, data };\n      response = await axios.request(options);\n    } else {\n      options = { ...options, ...requestOptions };\n      response = await axios.request(options);\n    }\n  }\n  if (!response) {\n    throw new Error('Unexpected error: Request failed.');\n  }\n  let responseBody = response.data;\n  var responseObj;\n  if (_.isString(responseBody)) {\n    try {\n      responseObj = JSON.parse(responseBody);\n    } catch (e) {\n      throw new XDLError(\n        ErrorCode.INVALID_JSON,\n        'Invalid JSON returned from API: ' +\n          e +\n          '. Response body: ' +\n          responseBody\n      );\n    }\n  } else {\n    responseObj = responseBody;\n  }\n  if (responseObj.err) {\n    let err = ApiError(\n      responseObj.code || 'API_ERROR',\n      'API Response Error: ' + responseObj.err\n    );\n    // $FlowFixMe can't add arbitrary properties to error\n    err.serverError = responseObj.err;\n    throw err;\n  } else {\n    return responseObj;\n  }\n}\n\nasync function _convertFormDataToBuffer(formData) {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\nasync function _createAndReadBuffer(data) {\n  return new Promise(resolve => {\n    let reader = new FileReader();\n    reader.addEventListener('loadend', async () => {\n      let buffer = new Buffer(reader.result);\n      resolve(buffer);\n    });\n    reader.readAsArrayBuffer(data);\n  });\n}\n\nasync function _downloadAsync(url, path, options) {\n  let promptShown = false;\n\n  let warningTimer = setTimeout(() => {\n    if (options.retryFunction) {\n      options.retryFunction();\n    }\n    promptShown = true;\n  }, TIMER_DURATION);\n\n  let config;\n  // Checks if the call is being made in XDE or exp. (If XDE = XHR, if exp = HTTP);\n  if (!isNode()) {\n    let lastAmountLoaded = 0;\n    config = {\n      responseType: 'blob',\n      onDownloadProgress: progressEvent => {\n        const roundedProgress = Math.floor(\n          progressEvent.loaded / progressEvent.total * 100\n        );\n        clearTimeout(warningTimer);\n        if (!promptShown) {\n          warningTimer = setTimeout(() => {\n            if (options.retryFunction) {\n              options.retryFunction();\n            }\n            promptShown = true;\n          }, TIMER_DURATION);\n        }\n        if (options.progressFunction) {\n          options.progressFunction(\n            roundedProgress,\n            progressEvent.loaded - lastAmountLoaded,\n            progressEvent.total\n          );\n        }\n        lastAmountLoaded = progressEvent.loaded;\n      },\n    };\n    try {\n      let response = await axios(url, config);\n      let buffer = await _createAndReadBuffer(response.data);\n      await fs.promise.writeFile(path, buffer, {});\n      clearTimeout(warningTimer);\n    } catch (e) {\n      console.log(e.message);\n      throw new Error(\n        `Template project download failed, try downloading it from http://expo.io/--/api/v2/versions/download-template/blank`\n      );\n    }\n  } else {\n    config = {\n      responseType: 'stream',\n    };\n    try {\n      return new Promise(async resolve => {\n        let response = await axios(url, config);\n        let totalDownloadSize = parseInt(\n          response.data.headers['content-length'],\n          10\n        );\n        let downloadProgress = 0;\n        response.data\n          .on('data', chunk => {\n            downloadProgress += chunk.length;\n            const roundedProgress = Math.floor(\n              downloadProgress / totalDownloadSize * 100\n            );\n            clearTimeout(warningTimer);\n            if (!promptShown) {\n              warningTimer = setTimeout(() => {\n                if (options.retryFunction) {\n                  options.retryFunction();\n                }\n                promptShown = true;\n              }, TIMER_DURATION);\n            }\n            if (options.progressFunction) {\n              options.progressFunction(\n                roundedProgress,\n                chunk.length,\n                totalDownloadSize\n              );\n            }\n          })\n          .on('end', () => {\n            clearTimeout(warningTimer);\n            resolve();\n          })\n          .pipe(fs.createWriteStream(path));\n      });\n    } catch (e) {\n      console.log(e.message);\n      throw new Error(\n        `Template project download failed, try downloading it from http://expo.io/--/api/v2/versions/download-template/blank`\n      );\n    }\n  }\n}\n\nexport default class ApiClient {\n  static host: string = Config.api.host;\n  static port: number = Config.api.port || 80;\n\n  static _versionCache = new Cacher(\n    async () => {\n      return await ApiClient.callPathAsync('/--/versions');\n    },\n    'versions.json',\n    0,\n    path.join(__dirname, '../caches/versions.json')\n  );\n\n  static _schemaCaches = {};\n\n  static async callMethodAsync(\n    methodName: string,\n    args: Array<*>,\n    method: string,\n    requestBody: ?Object,\n    requestOptions: ?Object = {}\n  ): Promise<any> {\n    let url =\n      API_BASE_URL +\n      encodeURIComponent(methodName) +\n      '/' +\n      encodeURIComponent(JSON.stringify(args));\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async callPathAsync(\n    path,\n    method,\n    requestBody,\n    requestOptions: ?Object = {}\n  ) {\n    let url = ROOT_BASE_URL + path;\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async versionsAsync() {\n    return await ApiClient._versionCache.getAsync();\n  }\n\n  static async xdlSchemaAsync(sdkVersion) {\n    if (!ApiClient._schemaCaches.hasOwnProperty(sdkVersion)) {\n      ApiClient._schemaCaches[sdkVersion] = new Cacher(\n        async () => {\n          return await ApiClient.callPathAsync(`/--/xdl-schema/${sdkVersion}`);\n        },\n        `schema-${sdkVersion}.json`,\n        0,\n        path.join(__dirname, `../caches/schema-${sdkVersion}.json`)\n      );\n    }\n\n    return await ApiClient._schemaCaches[sdkVersion].getAsync();\n  }\n\n  static async sdkVersionsAsync() {\n    let versions = await ApiClient.versionsAsync();\n    return versions.sdkVersions;\n  }\n\n  static async downloadAsync(url, outputPath, options = {}) {\n    if (options.extract) {\n      let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n      let tmpPath = path.join(dotExpoHomeDirectory, 'tmp-download-file');\n      await _downloadAsync(url, tmpPath, options);\n      await Extract.extractAsync(tmpPath, outputPath);\n      rimraf.sync(tmpPath);\n    } else {\n      await _downloadAsync(url, outputPath, options);\n    }\n  }\n}\n"],"sourceRoot":"/xdl/src"}