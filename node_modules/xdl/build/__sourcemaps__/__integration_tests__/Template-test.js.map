{"version":3,"sources":["__integration_tests__/Template-test.js"],"names":["jasmine","DEFAULT_TIMEOUT_INTERVAL","describe","it","async","process","env","UNSAFE_EXPO_HOME_DIRECTORY","path","join","uuid","v1","await","clearXDLCacheAsync","let","dir","templateDownload","downloadTemplateApp","name","Date","valueOf","progressFunction","retryFunction","expect","not","toBeNull","projectRoot","extractTemplateApp","starterAppPath","root","rimraf","sync"],"mappings":";;AAKA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;;;AAJAA,QAAQC,wBAARD,GAAmC,MAAnCA;;;AAUAE,SAAS,eAATA,EAA0B,MAAM;AAC9BC,KAAG,yDAAHA,oBAA8DC,aAAY;AACxEC,YAAQC,GAARD,CAAYE,0BAAZF,GAAyCG,cAAKC,IAALD,CACvC,GADuCA,EAEvC,KAFuCA,EAGtC,SAAQE,gCAAKC,EAALD,EAAU,EAHoBF,CAAzCH;;AAMAO,UAAMC,+CAAND;AACAE,QAAIC,MAAMP,cAAKC,IAALD,CAAU,GAAVA,EAAe,KAAfA,EAAuB,SAAQE,gCAAKC,EAALD,EAAU,EAAzCF,CAAVM;AACAA,QAAIE,mBAAmBJ,MAAMK,+CAAoB,MAApBA,EAA4BF,GAA5BE,EAAiC;AAC5DC,YAAO,iBAAgB,IAAIC,IAAJ,GAAWC,OAAX,EAAqB,EADgB;AAE5DC,wBAAkB,YAAM,CAAE,CAFkC;AAG5DC,qBAAe,YAAM,CAAE;AAHqC,KAAjCL,CAA7BH;AAKAS,WAAOP,gBAAPO,EAAyBC,GAAzBD,CAA6BE,QAA7BF;AACA;AACAT,QAAIY,cAAcd,MAAMe,8CACtBX,iBAAiBY,cADKD,EAEtBX,iBAAiBE,IAFKS,EAGtBX,iBAAiBa,IAHKF,CAAxBb;;AAMAgB,wCAAOC,IAAPD,CAAYzB,QAAQC,GAARD,CAAYE,0BAAxBuB;AACAA,wCAAOC,IAAPD,CAAYf,GAAZe;AACD,GAxBD3B;AAyBD,CA1BDD","file":"../../__integration_tests__/Template-test.js","sourcesContent":["/**\n * @flow\n */\n\njasmine.DEFAULT_TIMEOUT_INTERVAL = 240000;\nimport path from 'path';\nimport uuid from 'uuid';\nimport rimraf from 'rimraf';\nimport {\n  clearXDLCacheAsync,\n  downloadTemplateApp,\n  extractTemplateApp,\n} from '../Exp';\n\ndescribe('Template Apps', () => {\n  it('should download the starter app template and extract it', async () => {\n    process.env.UNSAFE_EXPO_HOME_DIRECTORY = path.join(\n      '/',\n      'tmp',\n      `.expo-${uuid.v1()}`\n    );\n\n    await clearXDLCacheAsync();\n    let dir = path.join('/', 'tmp', `.expo-${uuid.v1()}`);\n    let templateDownload = await downloadTemplateApp('tabs', dir, {\n      name: `test-template-${new Date().valueOf()}`,\n      progressFunction: () => {},\n      retryFunction: () => {},\n    });\n    expect(templateDownload).not.toBeNull();\n    // Extract the template we just downloaded\n    let projectRoot = await extractTemplateApp(\n      templateDownload.starterAppPath,\n      templateDownload.name,\n      templateDownload.root\n    );\n\n    rimraf.sync(process.env.UNSAFE_EXPO_HOME_DIRECTORY);\n    rimraf.sync(dir);\n  });\n});\n"],"sourceRoot":"/xdl/src"}