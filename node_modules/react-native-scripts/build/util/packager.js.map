{"version":3,"sources":["packager.js"],"names":["projectDir","race","stopAsync","resolve","reject","setTimeout","result","readPackagerInfoAsync","packagerPid","process","kill","exit","cleanUpPackager","clearConsole","stdout","write","platform","installExitHooks","require","createInterface","input","stdin","output","on","emit","withTimestamp","then","green","shouldIgnoreMsg","msg","indexOf","run","onReady","options","packagerReady","needsClear","logBuffer","progressBar","cwd","handleLogChunk","chunk","deviceName","message","trim","level","INFO","WARN","yellow","red","ERROR","packagerLogsStream","projectRoot","onStartBuildBundle","total","clear","complete","incomplete","setBundleProgressBar","onProgressBuildBundle","ticks","percent","curr","tick","onFinishBuildBundle","err","startTime","endTime","duration","updateLogs","newLogChunks","updater","forEach","map","attachLoggerStream","stream","tag","type","startAsync","reason","stack"],"mappings":"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","file":"packager.js","sourcesContent":["// @flow\n\nimport { PackagerLogsStream, Project, ProjectSettings, ProjectUtils } from 'xdl';\n\nimport ProgressBar from 'progress';\nimport bunyan from 'bunyan';\nimport chalk from 'chalk';\n\nimport log from './log';\n\n// TODO get babel output that's nice enough to let it take over the console\nfunction clearConsole() {\n  process.stdout.write(process.platform === 'win32' ? '\\x1Bc' : '\\x1B[2J\\x1B[3J\\x1B[H');\n}\n\nfunction installExitHooks(projectDir) {\n  if (process.platform === 'win32') {\n    require('readline')\n      .createInterface({\n        input: process.stdin,\n        output: process.stdout,\n      })\n      .on('SIGINT', () => {\n        process.emit('SIGINT');\n      });\n  }\n\n  process.on('SIGINT', () => {\n    log.withTimestamp('Stopping packager...');\n    cleanUpPackager(projectDir).then(() => {\n      // TODO: this shows up after process exits, fix it\n      log.withTimestamp(chalk.green('Packager stopped.'));\n      process.exit();\n    });\n  });\n}\n\nasync function cleanUpPackager(projectDir) {\n  const result = await Promise.race([\n    Project.stopAsync(projectDir),\n    new Promise((resolve, reject) => setTimeout(resolve, 1000, 'stopFailed')),\n  ]);\n\n  if (result === 'stopFailed') {\n    // find RN packager pid, attempt to kill manually\n    try {\n      const { packagerPid } = await ProjectSettings.readPackagerInfoAsync(projectDir);\n      process.kill(packagerPid);\n    } catch (e) {\n      process.exit(1);\n    }\n  }\n}\n\nfunction shouldIgnoreMsg(msg) {\n  return (\n    msg.indexOf('Duplicate module name: bser') >= 0 ||\n    msg.indexOf('Duplicate module name: fb-watchman') >= 0 ||\n    msg.indexOf('Warning: React.createClass is no longer supported') >= 0 ||\n    msg.indexOf('Warning: PropTypes has been moved to a separate package') >= 0\n  );\n}\n\nfunction run(onReady: () => ?any, options: Object = {}) {\n  let packagerReady = false;\n  let needsClear = false;\n  let logBuffer = '';\n  let progressBar;\n  const projectDir = process.cwd();\n\n  const handleLogChunk = chunk => {\n    // pig, meet lipstick\n    // 1. https://github.com/facebook/react-native/issues/14620\n    // 2. https://github.com/facebook/react-native/issues/14610\n    // 3. https://github.com/react-community/create-react-native-app/issues/229#issuecomment-308654303\n    // @ide is investigating 3), the first two are upstream issues that will\n    // likely be resolved by others\n    if (shouldIgnoreMsg(chunk.msg)) {\n      return;\n    }\n\n    // we don't need to print the entire manifest when loading the app\n    if (chunk.msg.indexOf(' with appParams: ') >= 0) {\n      if (needsClear) {\n        // this is set when we previously encountered an error\n        // TODO clearConsole();\n      }\n      log.withTimestamp(`Running app on ${chunk.deviceName}\\n`);\n      return;\n    }\n\n    if (chunk.msg === 'Dependency graph loaded.') {\n      packagerReady = true;\n      onReady();\n      return;\n    }\n\n    if (packagerReady) {\n      const message = `${chunk.msg.trim()}\\n`;\n      if (chunk.level <= bunyan.INFO) {\n        log.withTimestamp(message);\n      } else if (chunk.level === bunyan.WARN) {\n        log.withTimestamp(chalk.yellow(message));\n      } else {\n        log.withTimestamp(chalk.red(message));\n\n        // if you run into a syntax error then we should clear log output on reload\n        needsClear = message.indexOf('SyntaxError') >= 0;\n      }\n    } else {\n      if (chunk.level >= bunyan.ERROR) {\n        log(chalk.yellow('***ERROR STARTING PACKAGER***'));\n        log(logBuffer);\n        log(chalk.red(chunk.msg));\n        logBuffer = '';\n      } else {\n        logBuffer += chunk.msg + '\\n';\n      }\n    }\n  };\n\n  // Subscribe to packager/server logs\n  let packagerLogsStream = new PackagerLogsStream({\n    projectRoot: projectDir,\n    onStartBuildBundle: () => {\n      progressBar = new ProgressBar('Building JavaScript bundle [:bar] :percent', {\n        total: 100,\n        clear: true,\n        complete: '=',\n        incomplete: ' ',\n      });\n\n      log.setBundleProgressBar(progressBar);\n    },\n    onProgressBuildBundle: percent => {\n      if (!progressBar || progressBar.complete) return;\n      let ticks = percent - progressBar.curr;\n      ticks > 0 && progressBar.tick(ticks);\n    },\n    onFinishBuildBundle: (err, startTime, endTime) => {\n      if (progressBar && !progressBar.complete) {\n        progressBar.tick(100 - progressBar.curr);\n      }\n\n      if (progressBar) {\n        log.setBundleProgressBar(null);\n        progressBar = null;\n\n        if (err) {\n          log.withTimestamp(chalk.red(`Failed building JavaScript bundle`));\n        } else {\n          let duration = endTime - startTime;\n          log.withTimestamp(chalk.green(`Finished building JavaScript bundle in ${duration}ms`));\n        }\n      }\n    },\n    updateLogs: updater => {\n      let newLogChunks = updater([]);\n\n      if (progressBar) {\n        // Restarting watchman causes `onFinishBuildBundle` to not fire. Until\n        // this is handled upstream in xdl, reset progress bar with error here.\n        newLogChunks.forEach(chunk => {\n          if (chunk.msg === 'Restarted watchman.') {\n            progressBar.tick(100 - progressBar.curr);\n            log.setBundleProgressBar(null);\n            progressBar = null;\n            log.withTimestamp(chalk.red('Failed building JavaScript bundle'));\n          }\n        });\n      }\n\n      newLogChunks.map(handleLogChunk);\n    },\n  });\n\n  // Subscribe to device updates separately from packager/server updates\n  ProjectUtils.attachLoggerStream(projectDir, {\n    stream: {\n      write: chunk => {\n        if (chunk.tag === 'device') {\n          handleLogChunk(chunk);\n        }\n      },\n    },\n    type: 'raw',\n  });\n\n  installExitHooks(projectDir);\n  log.withTimestamp('Starting packager...');\n\n  Project.startAsync(projectDir, options).then(\n    () => {},\n    reason => {\n      log.withTimestamp(chalk.red(`Error starting packager: ${reason.stack}`));\n      process.exit(1);\n    }\n  );\n}\n\nexport default { run };\n"]}